// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wdjrQSNRX7ys49KwqunuZ4
// Component: oid2b1BUmtDM
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 7oMbG7rPxeuI/component
import Button from "../../Button"; // plasmic-import: Oysh0VX3iPjP/component
import Footer from "../../Footer"; // plasmic-import: t96iChT22ax_/component
import { useScreenVariants as useScreenVariantshbagvQWqcZ69 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: HbagvQWqcZ69/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: wdjrQSNRX7ys49KwqunuZ4/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: oid2b1BUmtDM/css
import handpngTfiNu4HUiFQl from "./images/handpng.png"; // plasmic-import: TfiNU4HUiFQl/picture
import _74C257A91PngLzQQEni6Ox from "./images/_74C257A91Png.png"; // plasmic-import: lz_qQ-eni6OX/picture
import _26Ee8E172Png9WLk1Os26YPg from "./images/_26Ee8E172Png.png"; // plasmic-import: 9WLk1os26yPG/picture
import _6D0Be6F33Png40R5HQnTfyu from "./images/_6D0Be6F33Png.png"; // plasmic-import: 40R5-hQNTfyu/picture
import vodacomcolourpngGK9TKpSjiMmV from "./images/vodacomcolourpng.png"; // plasmic-import: gK9tKpSjiMmV/picture
import eskomcolourpngVnJOldLsVmP from "./images/eskomcolourpng.png"; // plasmic-import: VnJOld_lsVmP/picture
import mtncolourpngJdtgIEhW0Kxk from "./images/mtncolourpng.png"; // plasmic-import: JdtgIEhW0Kxk/picture
import telkcomcolourpngPnDktkl4ALJl from "./images/telkcomcolourpng.png"; // plasmic-import: PNDktkl4aLJl/picture
import cecllccolourpng3LarGniVbkt from "./images/cecllccolourpng.png"; // plasmic-import: 3larGNI_vbkt/picture
import soleocolourpngIhKcdc3HpTVo from "./images/soleocolourpng.png"; // plasmic-import: ihKcdc3HpTVo/picture
import gvmagiccolourpngR0KteU1VBuJu from "./images/gvmagiccolourpng.png"; // plasmic-import: r0kteU1VBuJU/picture
import municipalpngElvCt4KfFQga from "./images/municipalpng.png"; // plasmic-import: elvCT4kfFQga/picture
import _0D1969FcGirl1PngVQkke07UX1G2 from "./images/_0D1969FcGirl1Png.png"; // plasmic-import: VQkke07uX1g2/picture

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshbagvQWqcZ69()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <section className={classNames(projectcss.all, sty.section___0P6D)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aOqmj
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#9ACEDB", fontWeight: 700 }}
                      >
                        {"GV "}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#9ACEDB", fontWeight: 700 }}
                      >
                        {"Vouchers"}
                      </span>
                    </React.Fragment>
                  </h1>
                }

                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#9ACEDB" }}
                >
                  {""}
                </span>
              </React.Fragment>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f1WNh
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#2E2854" }}
                >
                  {"Your One-Stop Destination for Digital Vouchers"}
                </span>
              </React.Fragment>
            </div>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__gyKBg)}
              displayHeight={"250px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"250px"}
              loading={"lazy"}
              src={{
                src: handpngTfiNu4HUiFQl,
                fullWidth: 500,
                fullHeight: 500,
                aspectRatio: undefined
              }}
            />
          </section>
          <section className={classNames(projectcss.all, sty.section___7HnYr)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___16Lfu)}
            >
              <div className={classNames(projectcss.all, sty.column__sa9Rb)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___7UC)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: _74C257A91PngLzQQEni6Ox,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5Y338
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__qMu1S
                        )}
                      >
                        {"Countless Options"}
                      </h4>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lXLo
                  )}
                >
                  {
                    "Browse our website to recharge on a wide variety of Prepaid Services"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__c60CJ)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___9XHbp)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: _26Ee8E172Png9WLk1Os26YPg,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zn66F
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__ndT9X
                        )}
                      >
                        {"Gift Vouchers"}
                      </h4>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bUPuE
                  )}
                >
                  {"Gift Vouchers redeemable at selected outlets available."}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__os6Wv)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___8PfOd)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: _6D0Be6F33Png40R5HQnTfyu,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ujEqe
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4___9ZV0R
                        )}
                      >
                        {"Secure Payment"}
                      </h4>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__k15Os
                  )}
                >
                  {
                    "Keep your info safe. Our encrypted payment gateway ensures your security"
                  }
                </div>
              </div>
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section___8BEit)}>
            <div className={classNames(projectcss.all, sty.columns__xYpg5)}>
              <div className={classNames(projectcss.all, sty.column__okmDz)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lqJAa)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToVodacom"] = true
                      ? (() => {
                          const actionArgs = { destination: `/vodacom` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToVodacom"] === "object" &&
                      typeof $steps["goToVodacom"].then === "function"
                    ) {
                      $steps["goToVodacom"] = await $steps["goToVodacom"];
                    }
                  }}
                  src={{
                    src: vodacomcolourpngGK9TKpSjiMmV,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__koS3)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__uODA)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToMunicipality"] = true
                      ? (() => {
                          const actionArgs = { destination: `/municipality` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToMunicipality"] === "object" &&
                      typeof $steps["goToMunicipality"].then === "function"
                    ) {
                      $steps["goToMunicipality"] = await $steps[
                        "goToMunicipality"
                      ];
                    }
                  }}
                  src={{
                    src: eskomcolourpngVnJOldLsVmP,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__bYaPu)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__awe23)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToMtn"] = true
                      ? (() => {
                          const actionArgs = { destination: `/MTN` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToMtn"] === "object" &&
                      typeof $steps["goToMtn"].then === "function"
                    ) {
                      $steps["goToMtn"] = await $steps["goToMtn"];
                    }
                  }}
                  src={{
                    src: mtncolourpngJdtgIEhW0Kxk,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___9G5B4)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__puNme)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToTelkom"] = true
                      ? (() => {
                          const actionArgs = { destination: `/telkom` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToTelkom"] === "object" &&
                      typeof $steps["goToTelkom"].then === "function"
                    ) {
                      $steps["goToTelkom"] = await $steps["goToTelkom"];
                    }
                  }}
                  src={{
                    src: telkcomcolourpngPnDktkl4ALJl,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.columns__rbZPq)}>
              <div className={classNames(projectcss.all, sty.column__wt8D)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___2E1Xr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToCellC"] = true
                      ? (() => {
                          const actionArgs = { destination: `/cellc` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToCellC"] === "object" &&
                      typeof $steps["goToCellC"].then === "function"
                    ) {
                      $steps["goToCellC"] = await $steps["goToCellC"];
                    }
                  }}
                  src={{
                    src: cecllccolourpng3LarGniVbkt,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__imSr9)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4O7G)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToGiftVouchers"] = true
                      ? (() => {
                          const actionArgs = { destination: `/gift-vouchers` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToGiftVouchers"] === "object" &&
                      typeof $steps["goToGiftVouchers"].then === "function"
                    ) {
                      $steps["goToGiftVouchers"] = await $steps[
                        "goToGiftVouchers"
                      ];
                    }
                  }}
                  src={{
                    src: soleocolourpngIhKcdc3HpTVo,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__fzTvv)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lIaHs)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToGvMagic"] = true
                      ? (() => {
                          const actionArgs = { destination: `/gvmagic` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToGvMagic"] === "object" &&
                      typeof $steps["goToGvMagic"].then === "function"
                    ) {
                      $steps["goToGvMagic"] = await $steps["goToGvMagic"];
                    }
                  }}
                  src={{
                    src: gvmagiccolourpngR0KteU1VBuJu,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___9LFqe)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vQq4P)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToPrepaidElectricity"] = true
                      ? (() => {
                          const actionArgs = { destination: `/prepaid` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToPrepaidElectricity"] === "object" &&
                      typeof $steps["goToPrepaidElectricity"].then ===
                        "function"
                    ) {
                      $steps["goToPrepaidElectricity"] = await $steps[
                        "goToPrepaidElectricity"
                      ];
                    }
                  }}
                  src={{
                    src: municipalpngElvCt4KfFQga,
                    fullWidth: 123,
                    fullHeight: 46,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__wBkqB)}>
            <div className={classNames(projectcss.all, sty.columns__fPjJu)}>
              <div className={classNames(projectcss.all, sty.column___89194)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__amPlo
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h2
                        data-plasmic-name={"h2"}
                        data-plasmic-override={overrides.h2}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <h3
                              data-plasmic-name={"h3"}
                              data-plasmic-override={overrides.h3}
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3
                              )}
                            >
                              {"Recieve Your\nVoucher Instantly"}
                            </h3>
                          }

                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </h2>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fw6FQ
                  )}
                >
                  {
                    "Our swift service ensures your voucher is available immediately, so you can focus on what really matters."
                  }
                </div>
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tkxsT
                    )}
                  >
                    {"Shop Now"}
                  </div>
                </Button>
              </div>
              <div className={classNames(projectcss.all, sty.column___0UTju)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tB6LG)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: _0D1969FcGirl1PngVQkke07UX1G2,
                    fullWidth: 683,
                    fullHeight: 453,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "h2", "h3", "button", "footer"],
  header: ["header"],
  h1: ["h1"],
  h2: ["h2", "h3"],
  h3: ["h3"],
  button: ["button"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    h3: makeNodeComponent("h3"),
    button: makeNodeComponent("button"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
