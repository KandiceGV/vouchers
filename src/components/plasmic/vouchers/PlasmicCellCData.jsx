// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wdjrQSNRX7ys49KwqunuZ4
// Component: UYrkT9_29Lqc
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 7oMbG7rPxeuI/component
import Footer from "../../Footer"; // plasmic-import: t96iChT22ax_/component
import { useScreenVariants as useScreenVariantshbagvQWqcZ69 } from "../website_starter/PlasmicGlobalVariant__Screen"; // plasmic-import: HbagvQWqcZ69/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../website_starter/plasmic_website_starter.module.css"; // plasmic-import: wdjrQSNRX7ys49KwqunuZ4/projectcss
import sty from "./PlasmicCellCData.module.css"; // plasmic-import: UYrkT9_29Lqc/css
import cellC100MbR19PngEl2LhwlYu95F from "./images/cellC100MbR19Png.png"; // plasmic-import: el2LHWLYu95F/picture
import cellC150MbR29PngInxUuFxmG3 from "./images/cellC150MbR29Png.png"; // plasmic-import: inx-uuFxm_G3/picture
import cellC250MbR35PngNcPWpfiKiuVe from "./images/cellC250MbR35Png.png"; // plasmic-import: NcPWpfiKIUVe/picture
import cellC350MbR49PngQwgZLuJfOo9V from "./images/cellC350MbR49Png.png"; // plasmic-import: qwgZLuJfOO9V/picture
import cellC600MbR69PngZz1K3Ic6Hzqk from "./images/cellC600MbR69Png.png"; // plasmic-import: ZZ1K3IC6Hzqk/picture
import cellCR851GbpngEkeTgcVw9Qb7 from "./images/cellCR851Gbpng.png"; // plasmic-import: ekeTGCVw9Qb7/picture
import cellCR9915GbpngSJsg5BYjNkb from "./images/cellCR9915Gbpng.png"; // plasmic-import: sJsg5B_yjNKB/picture
import cellCR1492GbpngV7F67Qk138Jf from "./images/cellCR1492Gbpng.png"; // plasmic-import: V7f67Qk138Jf/picture
import cellCR1993GbR199PngJU85KTaL5IRi from "./images/cellCR1993GbR199Png.png"; // plasmic-import: jU85kTaL5iRI/picture
import cellC30MbDailypngKTel1QRPkIcX from "./images/cellC30MbDailypng.png"; // plasmic-import: KTel1qRPkIcX/picture
import cellC65MbDailyR9PngS78Hyk334Ud3 from "./images/cellC65MbDailyR9Png.png"; // plasmic-import: s78hyk334UD3/picture
import cellC80MbDailyDatapngVdjoEnpi2V2L from "./images/cellC80MbDailyDatapng.png"; // plasmic-import: VdjoEnpi2V2L/picture
import cellCMbDailypngUxH95Mr3PhFs from "./images/cellCMbDailypng.png"; // plasmic-import: uxH95MR3PhFs/picture
import cellC150DailypngR7L6VZGqKjE from "./images/cellC150Dailypng.png"; // plasmic-import: R7L6vZGqKj-E/picture
import cellC300MbR17Png8B0V2QmCiCxT from "./images/cellC300MbR17Png.png"; // plasmic-import: 8b0v2QmCICxT/picture
import cellC600R19PngU963ZsrzA1E from "./images/cellC600R19Png.png"; // plasmic-import: U963_zsrzA1e/picture
import cellC1GbR25PngNaFl93EbPXtk from "./images/cellC1GbR25Png.png"; // plasmic-import: naFl93ebPXtk/picture
import cellC2GbDailyR35PngAXe9TgmKjdkw from "./images/cellC2GbDailyR35Png.png"; // plasmic-import: aXe9TgmKjdkw/picture
import cellC60Mb7DaypngXTu3UdPpXUbi from "./images/cellC60Mb7Daypng.png"; // plasmic-import: xTu3UDPpXUbi/picture
import cellC1507DaypngZoQerPq1UrP from "./images/cellC1507Daypng.png"; // plasmic-import: ZoQerPq1UR_p/picture
import cellC250Mb7Day29Png1Pf0836OXa1 from "./images/cellC250Mb7Day29Png.png"; // plasmic-import: -1PF0836oXA1/picture
import cellC500Mb7DayR49PngN4FYbAnSbhx6 from "./images/cellC500Mb7DayR49Png.png"; // plasmic-import: N4FYbAnSbhx6/picture
import cellC1Gb7DayR69Png9QuiiuXv4Ui5 from "./images/cellC1Gb7DayR69Png.png"; // plasmic-import: 9QUIIUXv4Ui5/picture
import cellC2Gb7DayR99PngHiF0XgO9XOfE from "./images/cellC2Gb7DayR99Png.png"; // plasmic-import: hiF0xgO9XOfE/picture

createPlasmicElementProxy;

export const PlasmicCellCData__VariantProps = new Array();

export const PlasmicCellCData__ArgProps = new Array();

function PlasmicCellCData__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshbagvQWqcZ69()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"shop"}
          data-plasmic-override={overrides.shop}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.shop
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <section className={classNames(projectcss.all, sty.section__mGxmt)}>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#2E2854" }}
                      >
                        {"Cell C Data"}
                      </span>
                    </React.Fragment>
                  </h1>
                }

                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__rtW8)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__pGLa3)}
            >
              <div className={classNames(projectcss.all, sty.column__s7LWp)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rNliX)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellC100MbR19PngEl2LhwlYu95F,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__xjuzO)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__fE3Qt)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC150MbR29PngInxUuFxmG3,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__pR782)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__fdS54)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC250MbR35PngNcPWpfiKiuVe,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__scq9G)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xmZzp)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC350MbR49PngQwgZLuJfOo9V,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__nIudr)}
            >
              <div className={classNames(projectcss.all, sty.column__r7M1B)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__a01Av)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellC600MbR69PngZz1K3Ic6Hzqk,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__gbTet)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lFuEi)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCR851GbpngEkeTgcVw9Qb7,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__nvF2B)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__yBfOh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCR9915GbpngSJsg5BYjNkb,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__rL089)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__dw7QP)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCR1492GbpngV7F67Qk138Jf,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__hOmOh)}
            >
              <div className={classNames(projectcss.all, sty.column__hCjHe)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mB1Uu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCR1993GbR199PngJU85KTaL5IRi,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___1EYze)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tDrMq)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC30MbDailypngKTel1QRPkIcX,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___68PUw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__g776M)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC65MbDailyR9PngS78Hyk334Ud3,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__cJhLq)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__eQ1D)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC80MbDailyDatapngVdjoEnpi2V2L,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__r95Q)}
            >
              <div className={classNames(projectcss.all, sty.column__kdUhS)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__uIt5R)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCMbDailypngUxH95Mr3PhFs,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__ujcoD)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__f6Vtp)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC150DailypngR7L6VZGqKjE,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__lavBj)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mLwQ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC300MbR17Png8B0V2QmCiCxT,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__et99U)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wwCYn)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC600R19PngU963ZsrzA1E,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__c90Vr)}
            >
              <div className={classNames(projectcss.all, sty.column__tphp)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nYisw)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellC1GbR25PngNaFl93EbPXtk,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__z3DOt)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__frh8G)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC2GbDailyR35PngAXe9TgmKjdkw,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__oUMe)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___8WImH)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC60Mb7DaypngXTu3UdPpXUbi,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__iv908)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kC17Q)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC1507DaypngZoQerPq1UrP,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__vp3Ge)}
            >
              <div className={classNames(projectcss.all, sty.column___7RDA)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kSsQs)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellC250Mb7Day29Png1Pf0836OXa1,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__ijbrO)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__d9BYj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC500Mb7DayR49PngN4FYbAnSbhx6,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__hYrsR)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1GAvz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC1Gb7DayR69Png9QuiiuXv4Ui5,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__bmRnk)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___9RZm)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellC2Gb7DayR99PngHiF0XgO9XOfE,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  shop: ["shop", "header", "text", "h1", "footer"],
  header: ["header"],
  text: ["text", "h1"],
  h1: ["h1"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicCellCData__ArgProps,
          internalVariantPropNames: PlasmicCellCData__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCellCData__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "shop") {
    func.displayName = "PlasmicCellCData";
  } else {
    func.displayName = `PlasmicCellCData.${nodeName}`;
  }
  return func;
}

export const PlasmicCellCData = Object.assign(
  // Top-level PlasmicCellCData renders the root element
  makeNodeComponent("shop"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    text: makeNodeComponent("text"),
    h1: makeNodeComponent("h1"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicCellCData
    internalVariantProps: PlasmicCellCData__VariantProps,
    internalArgProps: PlasmicCellCData__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Cell C Data",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCellCData;
/* prettier-ignore-end */
