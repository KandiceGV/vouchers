// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wdjrQSNRX7ys49KwqunuZ4
// Component: qQCE211j69v4
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 7oMbG7rPxeuI/component
import Footer from "../../Footer"; // plasmic-import: t96iChT22ax_/component
import { useScreenVariants as useScreenVariantshbagvQWqcZ69 } from "../website_starter/PlasmicGlobalVariant__Screen"; // plasmic-import: HbagvQWqcZ69/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../website_starter/plasmic_website_starter.module.css"; // plasmic-import: wdjrQSNRX7ys49KwqunuZ4/projectcss
import sty from "./PlasmicCellCAirtime.module.css"; // plasmic-import: qQCE211j69v4/css
import cellCAirtimeR5Png6AGlqdCaXPf from "./images/cellCAirtimeR5Png.png"; // plasmic-import: 6A_glqdCaXPf/picture
import cellCAirtimeR10Png8GgjFucOcS3L from "./images/cellCAirtimeR10Png.png"; // plasmic-import: 8GgjFucOcS3L/picture
import cellCAirtimeR20PngGLg7K0CjPpS from "./images/cellCAirtimeR20Png.png"; // plasmic-import: GLg7k0Cj-PpS/picture
import cellCAirtimeR25PngHLciIyNAor1I from "./images/cellCAirtimeR25Png.png"; // plasmic-import: hLciIyNAor1I/picture
import cellCAirtimeR30PngVKqIDjukdu2 from "./images/cellCAirtimeR30Png.png"; // plasmic-import: vKq_iDjukdu2/picture
import cellCAirtimeR35PngO28Glw5B7FYv from "./images/cellCAirtimeR35Png.png"; // plasmic-import: o28GLW5B7fYv/picture
import cellCAirtimeR50PngZMsrQknmzoj1 from "./images/cellCAirtimeR50Png.png"; // plasmic-import: zMsrQKNMZOJ1/picture
import cellCAirtimeR60PngDHn5W1EJvx6W from "./images/cellCAirtimeR60Png.png"; // plasmic-import: dHn5W1eJvx6W/picture
import cellCAirtimeR70PngSqVxliCtAsoi from "./images/cellCAirtimeR70Png.png"; // plasmic-import: sqVXLICtASOI/picture
import cellCAirtimeR100Png6HlkDmjbXpQ from "./images/cellCAirtimeR100Png.png"; // plasmic-import: 6hlkDMJBXpQ-/picture
import cellCAirtimeR120PngBLamxTk57Ma from "./images/cellCAirtimeR120Png.png"; // plasmic-import: bLamxTK5_7ma/picture
import cellCAirtimeR150PngMfUxbZ5JahHz from "./images/cellCAirtimeR150Png.png"; // plasmic-import: MFUxbZ5JAHHz/picture
import cellCAirtimeR200PngAiXjYqe0Pnn from "./images/cellCAirtimeR200Png.png"; // plasmic-import: aiXJYqe0Pnn-/picture
import cellCAirtimeR300Png1TPqG3K8Qbh from "./images/cellCAirtimeR300Png.png"; // plasmic-import: 1TPqG3K8_Qbh/picture
import cellCAirtimeR500PngP7TjQ9Dzf9Pw from "./images/cellCAirtimeR500Png.png"; // plasmic-import: P7tjQ9dzf9PW/picture

createPlasmicElementProxy;

export const PlasmicCellCAirtime__VariantProps = new Array();

export const PlasmicCellCAirtime__ArgProps = new Array();

function PlasmicCellCAirtime__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshbagvQWqcZ69()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"shop"}
          data-plasmic-override={overrides.shop}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.shop
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <section className={classNames(projectcss.all, sty.section__kq8DB)}>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#2E2854" }}
                      >
                        {"Cell C Airtime"}
                      </span>
                    </React.Fragment>
                  </h1>
                }

                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__dTbiV)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__cRq9L)}
            >
              <div className={classNames(projectcss.all, sty.column__rH6XP)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mvIwk)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR5Png6AGlqdCaXPf,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__qFdOm)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mTrvW)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR10Png8GgjFucOcS3L,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__aKdhU)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___47P2I)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR20PngGLg7K0CjPpS,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__ps4Xq)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__jaxKd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR25PngHLciIyNAor1I,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__vmVce)}
            >
              <div className={classNames(projectcss.all, sty.column__nA9Ma)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__fvgTi)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR30PngVKqIDjukdu2,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__fGhpf)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ia0Dh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR35PngO28Glw5B7FYv,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__sHoi0)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qKqCx)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR50PngZMsrQknmzoj1,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__tnNlf)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hzMwV)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR60PngDHn5W1EJvx6W,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__ve0L8)}
            >
              <div className={classNames(projectcss.all, sty.column__odgSk)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kVv3P)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR70PngSqVxliCtAsoi,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___646X9)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ypZ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR100Png6HlkDmjbXpQ,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__eld1B)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xaN1B)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR120PngBLamxTk57Ma,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__wNvCq)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__eElav)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR150PngMfUxbZ5JahHz,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__mXnum)}
            >
              <div className={classNames(projectcss.all, sty.column__xYhsb)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rliU)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "500px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR200PngAiXjYqe0Pnn,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___72Amh)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__fSWnd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR300Png1TPqG3K8Qbh,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__wMiCd)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__uv3EU)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: cellCAirtimeR500PngP7TjQ9Dzf9Pw,
                    fullWidth: 408,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___01Coi)} />
            </p.Stack>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  shop: ["shop", "header", "text", "h1", "footer"],
  header: ["header"],
  text: ["text", "h1"],
  h1: ["h1"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicCellCAirtime__ArgProps,
          internalVariantPropNames: PlasmicCellCAirtime__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCellCAirtime__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "shop") {
    func.displayName = "PlasmicCellCAirtime";
  } else {
    func.displayName = `PlasmicCellCAirtime.${nodeName}`;
  }
  return func;
}

export const PlasmicCellCAirtime = Object.assign(
  // Top-level PlasmicCellCAirtime renders the root element
  makeNodeComponent("shop"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    text: makeNodeComponent("text"),
    h1: makeNodeComponent("h1"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicCellCAirtime
    internalVariantProps: PlasmicCellCAirtime__VariantProps,
    internalArgProps: PlasmicCellCAirtime__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Cell C Airtime",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCellCAirtime;
/* prettier-ignore-end */
